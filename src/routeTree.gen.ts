/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardProjectsIndexRouteImport } from './routes/dashboard/projects/index'
import { Route as DashboardProjectsNewRouteImport } from './routes/dashboard/projects/new'
import { Route as DashboardProjectsProjectIdRouteImport } from './routes/dashboard/projects/$projectId'
import { Route as DashboardProjectsProjectIdSessionsRouteImport } from './routes/dashboard/projects/$projectId.sessions'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardProjectsIndexRoute = DashboardProjectsIndexRouteImport.update({
  id: '/dashboard/projects/',
  path: '/dashboard/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardProjectsNewRoute = DashboardProjectsNewRouteImport.update({
  id: '/dashboard/projects/new',
  path: '/dashboard/projects/new',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardProjectsProjectIdRoute =
  DashboardProjectsProjectIdRouteImport.update({
    id: '/dashboard/projects/$projectId',
    path: '/dashboard/projects/$projectId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardProjectsProjectIdSessionsRoute =
  DashboardProjectsProjectIdSessionsRouteImport.update({
    id: '/sessions',
    path: '/sessions',
    getParentRoute: () => DashboardProjectsProjectIdRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/projects/$projectId': typeof DashboardProjectsProjectIdRouteWithChildren
  '/dashboard/projects/new': typeof DashboardProjectsNewRoute
  '/dashboard/projects': typeof DashboardProjectsIndexRoute
  '/dashboard/projects/$projectId/sessions': typeof DashboardProjectsProjectIdSessionsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/projects/$projectId': typeof DashboardProjectsProjectIdRouteWithChildren
  '/dashboard/projects/new': typeof DashboardProjectsNewRoute
  '/dashboard/projects': typeof DashboardProjectsIndexRoute
  '/dashboard/projects/$projectId/sessions': typeof DashboardProjectsProjectIdSessionsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/projects/$projectId': typeof DashboardProjectsProjectIdRouteWithChildren
  '/dashboard/projects/new': typeof DashboardProjectsNewRoute
  '/dashboard/projects/': typeof DashboardProjectsIndexRoute
  '/dashboard/projects/$projectId/sessions': typeof DashboardProjectsProjectIdSessionsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/projects/$projectId'
    | '/dashboard/projects/new'
    | '/dashboard/projects'
    | '/dashboard/projects/$projectId/sessions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/dashboard/projects/$projectId'
    | '/dashboard/projects/new'
    | '/dashboard/projects'
    | '/dashboard/projects/$projectId/sessions'
  id:
    | '__root__'
    | '/'
    | '/dashboard/'
    | '/dashboard/projects/$projectId'
    | '/dashboard/projects/new'
    | '/dashboard/projects/'
    | '/dashboard/projects/$projectId/sessions'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardProjectsProjectIdRoute: typeof DashboardProjectsProjectIdRouteWithChildren
  DashboardProjectsNewRoute: typeof DashboardProjectsNewRoute
  DashboardProjectsIndexRoute: typeof DashboardProjectsIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/projects/': {
      id: '/dashboard/projects/'
      path: '/dashboard/projects'
      fullPath: '/dashboard/projects'
      preLoaderRoute: typeof DashboardProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/projects/new': {
      id: '/dashboard/projects/new'
      path: '/dashboard/projects/new'
      fullPath: '/dashboard/projects/new'
      preLoaderRoute: typeof DashboardProjectsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/projects/$projectId': {
      id: '/dashboard/projects/$projectId'
      path: '/dashboard/projects/$projectId'
      fullPath: '/dashboard/projects/$projectId'
      preLoaderRoute: typeof DashboardProjectsProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/projects/$projectId/sessions': {
      id: '/dashboard/projects/$projectId/sessions'
      path: '/sessions'
      fullPath: '/dashboard/projects/$projectId/sessions'
      preLoaderRoute: typeof DashboardProjectsProjectIdSessionsRouteImport
      parentRoute: typeof DashboardProjectsProjectIdRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface DashboardProjectsProjectIdRouteChildren {
  DashboardProjectsProjectIdSessionsRoute: typeof DashboardProjectsProjectIdSessionsRoute
}

const DashboardProjectsProjectIdRouteChildren: DashboardProjectsProjectIdRouteChildren =
  {
    DashboardProjectsProjectIdSessionsRoute:
      DashboardProjectsProjectIdSessionsRoute,
  }

const DashboardProjectsProjectIdRouteWithChildren =
  DashboardProjectsProjectIdRoute._addFileChildren(
    DashboardProjectsProjectIdRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardProjectsProjectIdRoute: DashboardProjectsProjectIdRouteWithChildren,
  DashboardProjectsNewRoute: DashboardProjectsNewRoute,
  DashboardProjectsIndexRoute: DashboardProjectsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
